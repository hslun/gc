<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://cxf.apache.org/jaxws 
    	http://cxf.apache.org/schemas/jaxws.xsd"
       default-lazy-init="true">
  <description>Spring Configuration</description>
  <import resource="classpath:META-INF/cxf/cxf.xml"/>
  <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml"/>
  <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>
  <import resource="classpath:conf/webservice/applicationWebServiceCore.xml"/>
  <import resource="classpath:conf/webservice/applicationWebService.xml"/>
  <!-- load conf propertsies -->
  <context:property-placeholder
      ignore-unresolvable="true" location="classpath*:conf/application.properties"/>

  <bean id="springContextHolder" class="cn.com.hfga.util.common.SpringUtil"
        lazy-init="false"/>

  <context:component-scan base-package="cn.com.hfga">
    <context:exclude-filter type="annotation"
                            expression="org.springframework.stereotype.Controller"/>
    <context:exclude-filter type="annotation"
                            expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
  </context:component-scan>

  <!-- JPA Entity Manager -->
  <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
    <property name="packagesToScan" value="cn.com.hfga.entity"/>
    <property name="jpaProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.SQLServer2008Dialect</prop>
        <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
        <prop key="net.sf.ehcache.configurationResourceName">conf/cache/ehcache-hibernate-local.xml</prop>
        <!--<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop> -->
        <prop key="hibernate.cache.use_query_cache">true</prop>
        <prop key="cache.use_second_level_cache">true</prop>
        <prop key="hibernate.search.default.directory_provider">filesystem</prop>
        <prop key="hibernate.search.default.indexBase">indexes</prop>
        <prop key="hibernate.show_sql">true</prop>
        <prop key="hibernate.hbm2ddl.auto">noupdate</prop>
      </props>
    </property>
  </bean>

  <!-- 配置 Spirng 的 JdbcTemplate -->
  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"></property>
  </bean>

  <!-- appoint JPA implement adapter -->
  <bean id="hibernateJpaVendorAdapter"
        class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

  <!-- configure Spring Data JPA -->
  <jpa:repositories base-package="cn.com.hfga"
                    transaction-manager-ref="transactionManager"
                    entity-manager-factory-ref="entityManagerFactory"/>

  <!-- configure JPA Transaction -->
  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="entityManagerFactory"/>
  </bean>

  <!-- configure Annotation drivern and the transation -->
  <tx:annotation-driven transaction-manager="transactionManager"
                        proxy-target-class="true"/>

  <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
    <!-- Connection Info -->
    <property name="driverClassName" value="${jdbc.driver}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <!-- 上传至服务器时将此注释 -->
    <property name="password" value="${jdbc.password}"/>
    <property name="testWhileIdle" value="true"/>
    <property name="testOnBorrow" value="true"/>
    <property name="validationQuery" value="SELECT 1 FROM DUAL"/>
    <property name="validationInterval" value="30000"/>
    <property name="timeBetweenEvictionRunsMillis" value="30000"/>
    <property name="maxWait" value="10000"/>
    <property name="removeAbandonedTimeout" value="1800"/>
    <property name="minEvictableIdleTimeMillis" value="30000"/>
    <property name="removeAbandoned" value="true"/>
    <property name="maxActive" value="${jdbc.pool.maxActive}"/>
    <property name="maxIdle" value="${jdbc.pool.maxIdle}"/>
    <property name="defaultAutoCommit" value="true"/>

  </bean>

  <!-- hibernate validator -->
  <bean id="validator"
        class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>


  <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- one of the properties available; the maximum file size in bytes -->
    <property name="maxUploadSize" value="100000000"/>
  </bean>

  <task:annotation-driven/>
  <task:executor id="executor" pool-size="5-10"
                 queue-capacity="100"/>
  <!--
  <bean id="SpringQtzJobMethod1" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
      <property name="targetObject">
          <ref bean="task"/>
      </property>
      <property name="targetMethod">
          <value>run</value>
      </property>
  </bean>


  <bean id="CronTriggerBean1" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
      <property name="jobDetail" ref="SpringQtzJobMethod1"></property>
      <property name="cronExpression" value="*/1 * * * * ?"></property>
  </bean>

  <bean id="SpringJobSchedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
      <property name="triggers">
          <list>
              <ref bean="CronTriggerBean1"/>
          </list>
      </property>
  </bean>
  <bean class="cn.com.hfga.controller.common.Task" id="task" />
  -->


</beans>