<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hfoa.dao.role.BRoleMapper" >
  <resultMap id="BaseResultMap" type="com.hfoa.entity.role.BRoleEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="rolename" property="rolename" jdbcType="VARCHAR" />
    <result column="available" property="available" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, rolename, available
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from b_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from b_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hfoa.entity.role.BRoleEntity" useGeneratedKeys="true" keyProperty="id">
    insert into b_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="rolename != null" >
        rolename,
      </if>
      <if test="available != null" >
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        #{available,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.hfoa.entity.role.BRoleEntity" >
    update b_role
    <set >
      <if test="rolename != null" >
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAllGradeByClass" resultType="com.hfoa.entity.role.BRoleClass">
  	select grade from b_role_class where rpleId in 
  		<foreach item="item" index="index" collection="list"
  		open="(" separator="," close=")">#{item}
  		</foreach>
  		and moduleNum=#{moduleNum,jdbcType=VARCHAR}
  </select>
  <select id="getRoleByRoleIds" resultType="com.hfoa.entity.role.BRoleEntity">
  	select * from b_role where id in 
  		<foreach item="item" index="index" collection="roleIds"
  		open="(" separator="," close=")">#{item}
  		</foreach>
  </select>
<!--   <select id="roleDisplayByPage" resultType="com.hfoa.entity.role.BRoleEntity"> -->
<!--   	select * from b_role where id not in  -->
<!--   		<foreach item="item" index="index" collection="shareRoleId" -->
<!--   		open="(" separator="," close=")">#{item} -->
<!--   		</foreach> -->
<!--   		order by id desc limit #{start,jdbcType=INTEGER},#{number,jdbcType=INTEGER} -->
<!--   </select> -->
</mapper>